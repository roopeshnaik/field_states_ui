diff --git a/src/FieldStateManager.php b/src/FieldStateManager.php
index 7097738..7a71b5c 100644
--- a/src/FieldStateManager.php
+++ b/src/FieldStateManager.php
@@ -172,19 +172,19 @@ class FieldStateManager extends DefaultPluginManager {
 
       case 'address_country':
       case 'decimal':
+      case 'datetime':
       case 'float':
       case 'integer':
+      case 'email':
       case 'string':
       case 'string_long':
         $target = &$element[0]['value'];
         break;
 
       case 'text_with_summary':
-      case 'text_long':
       case 'list_float':
       case 'list_integer':
       case 'list_string':
-      case 'link':
       case 'entity_reference_revisions':
       case 'datetime':
       case 'color_field_type':
@@ -197,7 +197,8 @@ class FieldStateManager extends DefaultPluginManager {
           $target = &$element[0];
         }
         break;
-
+      case 'text_long':
+      case 'link':
       case 'name':
         $target = &$element[0];
         $container = TRUE;
@@ -244,11 +245,8 @@ class FieldStateManager extends DefaultPluginManager {
     }
     if (isset($element['#cardinality_multiple']) && $element['#cardinality_multiple']) {
       // Multiple widget field. Put states on the wrapper.
-      $element = [
-        'element' => $element,
-        '#type'   => 'container',
-        '#states' => $this->getStates($states, $form_state, $context, $element, $parents),
-      ];
+      $element['#type'] = 'container';
+      $element['#states'] = $this->getStates($states, $form_state, $context, $element, $parents);
     }
     elseif (isset($container)) {
       // Add a container element and set states on that to ensure it works.
@@ -256,7 +254,7 @@ class FieldStateManager extends DefaultPluginManager {
       // it is better to handle the element properly. There are elements that it
       // does make sense to do this to (ie name) but avoid if possible.
       $element = [
-        'element' => $element,
+        'element' => $target,
         '#type'   => 'container',
         '#states' => $this->getStates($states, $form_state, $context, $element, $parents),
       ];
